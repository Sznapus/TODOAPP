{"version":3,"sources":["components/Header/Header.js","components/AddTask/AddTask.js","components/SelectSort/SelectSort.js","components/TaskList/Task/Input.js","components/TaskList/Task/Task.js","components/TaskList/TaskList.js","components/Footer/Footer.js","components/Popup/Popup.js","components/App.js","reportWebVitals.js","index.js"],"names":["monthsName","daysName","Container","styled","header","ContainerText","div","Header","time","Date","month","getMonth","days","getDate","day","getDay","monthName","dayName","className","Form","form","Datapicker","span","DatapickerToggle","BiCalendar","DatapickerInput","input","AddButton","FiEdit","AddInput","AddTask","handleSubmit","handlePriority","date","minDate","handleDate","value","handleChange","onSubmit","type","id","name","onChange","htmlFor","min","placeholder","SelectSort","handleSelect","showMessage","onClick","label","Input","done","handleDone","checked","List","li","Paragraph","p","props","priority","animationBell","keyframes","OnBell","BiBell","OffBell","ParagraphDate","timeIsOver","currentTime","finishedTime","maxDifference","daysBetweenDates","Task","handleRemove","tasks","map","task","now","ul","Span","TaskList","length","footer","Text","h3","Footer","countNotDoneTasks","filter","countDoneTasks","infoTask","countTask","BTN","button","Popup","removeAll","switchOff","App","retrievedObject","JSON","parse","localStorage","getItem","toISOString","slice","useState","setValue","setPriority","setTasks","setDate","select","setSelect","message","setMessage","useEffect","newTasks","sort","a","b","localeCompare","setItem","stringify","e","target","preventDefault","preventTask","uuidv4","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAEMA,EAAa,CACf,eACA,OACA,SACA,gBACA,MACA,WACA,SACA,gBACA,gBACA,mBACA,WACA,iBAEEC,EAAW,CACb,oBACA,SACA,aACA,WACA,cACA,SACA,aAGEC,EAAYC,IAAOC,OAAV,4RASTC,EAAgBF,IAAOG,IAAV,yGAyBJC,EAnBA,WACX,IAAIC,EAAO,IAAIC,KACXC,EAAQF,EAAKG,WACbC,EAAOJ,EAAKK,UACZC,EAAMN,EAAKO,SAETC,EAAYhB,EAAWU,GACvBO,EAAkB,IAARH,EAAYb,EAAS,GAAKA,EAASa,EAAM,GAEzD,OACI,cAACZ,EAAD,UACI,eAACG,EAAD,WACI,qBAAIa,UAAU,cAAd,UAA6BD,EAA7B,OACA,qBAAIC,UAAU,cAAd,UAA6BN,EAA7B,IAAoCI,W,eClD9CG,EAAOhB,IAAOiB,KAAV,sKAQJlB,EAAYC,IAAOG,IAAV,0GAKTe,EAAalB,IAAOmB,KAAV,8GAMVC,EAAmBpB,YAAOqB,IAAPrB,CAAH,oJAQhBsB,EAAkBtB,IAAOuB,MAAV,0XAoBfC,EAAYxB,YAAOyB,IAAPzB,CAAH,+CAIT0B,EAAW1B,IAAOuB,MAAV,oEAyCCI,EAnCC,SAAC,GAAsF,IAApFC,EAAmF,EAAnFA,aAAcC,EAAqE,EAArEA,eAAgBC,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,QAASC,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aAC/E,OACI,eAAClB,EAAD,CAAMmB,SAAUP,EAAhB,UACI,eAAC,EAAD,WACI,gCACI,uBAAOQ,KAAK,WACRC,GAAG,WACHC,KAAK,WACLC,SAAUV,IAEd,uBAAOW,QAAQ,WAAf,0BAEJ,eAACtB,EAAD,WACI,cAACE,EAAD,IACA,cAACE,EAAD,CACIc,KAAK,OACLH,MAAOH,EACPW,IAAKV,EACLQ,SAAUP,UAItB,eAAC,EAAD,WACI,cAACN,EAAD,CACIU,KAAK,OACLH,MAAOA,EACPM,SAAUL,EACVQ,YAAY,qBAEhB,wBAAQN,KAAK,SAAb,SAAsB,cAACZ,EAAD,aCvFhCzB,GAAYC,IAAOG,IAAV,2HA8BAwC,GAtBI,SAAC,GAA0C,IAAxCV,EAAuC,EAAvCA,MAAOW,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YACvC,OACI,eAAC,GAAD,WACI,uBAAOL,QAAQ,OAAf,iCACA,yBACIF,KAAK,OACLD,GAAG,OACHJ,MAAOA,EACPM,SAAUK,EAJd,UAMI,wBAAQX,MAAM,MAAd,sBACA,wBAAQA,MAAM,SAAd,+BACA,wBAAQA,MAAM,WAAd,mCAEJ,wBACIa,QAASD,EADb,SAEI,cAAC,IAAD,UCzBV9C,GAAYC,IAAO+C,MAAV,sGAkBAC,GAbD,SAAC,GAA8B,IAA5BX,EAA2B,EAA3BA,GAAIY,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WACvB,OACI,cAAC,GAAD,CAAWV,QAAQ,WAAnB,SACI,uBACIJ,KAAK,WACLG,SAAU,kBAAMW,EAAWb,IAC3Bc,QAASF,OCTnBG,GAAOpD,IAAOqD,GAAV,sPAWJtD,GAAYC,IAAOG,IAAV,iIAMTmD,GAAYtD,IAAOuD,EAAV,+WAQI,SAAAC,GAAK,OAAIA,EAAMC,SAAW,OAAS,SAC/B,SAAAD,GAAK,OAAIA,EAAMP,KAAO,eAAiB,UAQxDS,GAAgBC,YAAH,8RAebC,GAAS5D,YAAO6D,IAAP7D,CAAH,+IAKG0D,IAGTI,GAAU9D,YAAO6D,IAAP7D,CAAH,8CAIP+D,GAAgB/D,IAAOuD,EAAV,8GAgBbS,GAAa,SAACC,EAAaC,EAAcC,GAE7C,OAXuB,SAACF,EAAaC,GAMrC,OALAD,EAAc,IAAI3D,KAAK2D,KACvBC,EAAe,IAAI5D,KAAK4D,IAEUD,GAEjB,MAIEG,CAAiBH,EAAaC,IAC5BC,GAuCRE,GAnCF,SAAC,GAAkD,IAAhDnB,EAA+C,EAA/CA,WAAYoB,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,MAAOxC,EAAc,EAAdA,QAC/C,OACIwC,EAAMC,KAAI,SAAAC,GAAI,OAAI,eAACrB,GAAD,WAChB,eAAC,GAAD,WACE,cAAC,GAAD,CACEf,GAAIoC,EAAKpC,GACTY,KAAMwB,EAAKxB,KACXC,WAAYA,IAEd,eAACI,GAAD,CACEvC,UAAY0D,EAAKxB,KAAO,OAASlB,EAAU0C,EAAK3C,KAAO,aAAe,GACtEmB,KAAMwB,EAAKxB,KACXlB,QAASA,EACTD,KAAM2C,EAAK3C,KACX2B,SAAUgB,EAAKhB,SALjB,UAOGgB,EAAKnC,KAAO0B,GAAW1D,KAAKoE,MAAOD,EAAK3C,KAAM,GAAK,cAAC8B,GAAD,IAAY,cAACE,GAAD,UAGpE,eAAC,GAAD,WACE,cAACC,GAAD,UACGU,EAAK3C,OAER,wBACEM,KAAK,SACLU,QAAS,kBAAMwB,EAAaG,EAAKpC,KACjCtB,UAAU,cAHZ,SAKE,cAAC,IAAD,WA1BuB0D,EAAKpC,QCtFlCtC,GAAYC,IAAO2E,GAAV,kJAQTC,GAAO5E,IAAOmB,KAAV,8IAuBK0D,GAdE,SAAC,GAAkD,IAAhDN,EAA+C,EAA/CA,MAAOrB,EAAwC,EAAxCA,WAAYoB,EAA4B,EAA5BA,aAAcvC,EAAc,EAAdA,QACnD,OACE,cAAC,GAAD,CAAWwC,MAAOA,EAAlB,SACCA,EAAMO,OAAS,EACd,cAAC,GAAD,CACEP,MAAOA,EACPrB,WAAYA,EACZoB,aAAcA,EACdvC,QAASA,IACN,cAAC6C,GAAD,iCC3BL7E,GAAYC,IAAO+E,OAAV,2OAYTC,GAAOhF,IAAOiF,GAAV,iFAkCKC,GAdA,SAAC,GAAe,IAAbX,EAAY,EAAZA,MAEZY,EAAoBZ,EAAMa,QAAO,SAAAX,GAAI,OAAKA,EAAKxB,QAAM6B,OACrDO,EAAiBd,EAAMa,QAAO,SAAAX,GAAI,OAAIA,EAAKxB,QAAM6B,OACjDQ,EAnBY,SAACC,GACf,OAAQA,GACJ,KAAK,EACD,MAAM,kBACV,KAAK,EACD,MAAM,QAAN,OAAeA,EAAf,YACJ,KAAK,EACL,KAAK,EACL,KAAK,EACD,MAAM,QAAN,OAAeA,EAAf,YACJ,QACI,MAAM,QAAN,OAAeA,EAAf,gBAQKA,CAAUJ,GAEvB,OACI,eAAC,GAAD,WACI,cAACH,GAAD,UAAQM,IACR,eAACN,GAAD,sCAA2BK,SCzCjCtF,GAAYC,IAAOG,IAAV,sgBAmBTqF,GAAMxF,IAAOyF,OAAV,0FAuBMC,GAjBD,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UACxB,OACI,eAAC,GAAD,WACI,uBAAOpD,QAAQ,QAAf,4DACA,cAACgD,GAAD,CACIpD,KAAK,SACLU,QAAS6C,EAFb,iBAIA,cAACH,GAAD,CACIpD,KAAK,SACLU,QAAS8C,EAFb,qBCxBN7F,GAAYC,IAAOG,IAAV,2MA0IA0F,OAjIf,WAEE,IAAMC,EAAkBC,KAAKC,MAAMC,aAAaC,QAAQ,SAAW,GAC7DnE,GAAU,IAAIzB,MAAO6F,cAAcC,MAAM,EAAG,IAGlD,EAA0BC,mBAAS,IAAnC,mBAAOpE,EAAP,KAAcqE,EAAd,KACA,EAAgCD,oBAAS,GAAzC,mBAAO5C,EAAP,KAAiB8C,EAAjB,KACA,EAA0BF,mBAASP,GAAnC,mBAAOvB,EAAP,KAAciC,EAAd,KACA,EAAwBH,mBAAStE,GAAjC,mBAAOD,EAAP,KAAa2E,EAAb,KACA,EAA4BJ,mBAAS,OAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAuFA,OApCAC,qBAAU,WACR,GAAc,QAAXJ,EAAiB,CAClB,IAAMK,EAAWxC,EAAMyC,MAAK,SAACC,EAAGC,GAC9B,OAAOD,EAAE3E,KAAK6E,cAAcD,EAAE5E,SAEhCkE,EAAS,YAAIO,IAEf,GAAc,WAAXL,EAAoB,CACrB,IAAMK,EAAWxC,EAAMyC,MAAK,SAACC,EAAEC,GAC7B,OAAO,IAAI5G,KAAK2G,EAAEnF,MAAQ,IAAIxB,KAAK4G,EAAEpF,SAEvC0E,EAAS,YAAIO,SAEV,GAAe,aAAXL,EAAuB,CAC9B,IAAMK,EAAWxC,EAAMyC,MAAK,SAACC,EAAEC,GAC7B,OAAO,IAAI5G,KAAK4G,EAAEpF,MAAQ,IAAIxB,KAAK2G,EAAEnF,SAEvC0E,EAAS,YAAIO,OAEd,CAACL,IAeJT,aAAamB,QAAQ,MAAOrB,KAAKsB,UAAU9C,IAGzC,eAAC,GAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEtC,MAAOA,EACPH,KAAMA,EACNC,QAASA,EACTC,WAxFa,SAACsF,GAClBb,EAAQa,EAAEC,OAAOtF,QAwFbL,aAlFe,SAAC0F,GAClBA,EAAEE,iBACCvF,IACDuE,GAAS,SAAAiB,GAAW,4BAASA,GAAT,CAAsB,CACtCpF,GAAIqF,cACJpF,KAAML,EACNH,KAAMA,EACNmB,MAAM,EACNQ,SAAUA,QAEd6C,EAAS,MAyETpE,aA9Fe,SAACoF,GACpBhB,EAASgB,EAAEC,OAAOtF,QA8FdJ,eAxFiB,WACrB0E,GAAa9C,OAyFE,IAAZmD,EAAmB,cAAC,GAAD,CAAOhB,UAlBb,WAChBiB,GAAW,IAiBwClB,UAvBnC,WAChBa,EAAS,IACTK,GAAW,MAqBmE,KAC5E,cAAC,GAAD,CACE5E,MAAOyE,EACP9D,aAvDe,SAAC0E,GACpBX,EAAUW,EAAEC,OAAOtF,QAuDfY,YA/Bc,WAClBgE,GAAYD,MAgCV,cAAC,GAAD,CACErC,MAAOA,EACPrB,WA1Ea,SAACb,GAChBmE,EACEjC,EAAMC,KAAI,SAAAC,GACR,OAAGA,EAAKpC,KAAOA,EACN,2BACFoC,GADL,IAEExB,MAAOwB,EAAKxB,OAGTwB,OAkETH,aAjFe,SAACjC,GACpB,IAAM0E,EAAWxC,EAAMa,QAAO,SAAAX,GAAI,OAAIA,EAAKpC,KAAOA,KAElDmE,EAASO,IA+ELhF,QAASA,IAEX,cAAC,GAAD,CACAwC,MAAOA,QCnIEoD,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.7ea5a13f.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst monthsName = [\r\n    'Styczeń', \r\n    'Luty', \r\n    'Marzec', \r\n    'Kwiecień',\r\n    'Maj',\r\n    'Czerwiec',\r\n    'Lipiec', \r\n    'Sierpień',\r\n    'Wrzesień',\r\n    'Pażdziernik', \r\n    'Listopad',\r\n    'Grudzień'    \r\n];\r\nconst daysName = [\r\n    'Poniedziałek',\r\n    'Wtorek',\r\n    'Środa',\r\n    'Czwartek',\r\n    'Piątek',\r\n    'Sobota',\r\n    'Niedziela',\r\n];\r\n\r\nconst Container = styled.header`\r\n    display: flex;\r\n    width: 100%;\r\n    background-image: url(\"https://cdn.pixabay.com/photo/2018/03/29/19/34/northern-lights-3273425_960_720.jpg\");\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    overflow: hidden;\r\n    z-index: 1;\r\n`\r\nconst ContainerText = styled.div`\r\n    font-size: 1.8rem;\r\n    padding: .8rem;\r\n    color: var(--color-white);\r\n`\r\n\r\nconst Header = () => {\r\n    let time = new Date();\r\n    let month = time.getMonth();\r\n    let days = time.getDate();\r\n    let day = time.getDay();\r\n    \r\n    const monthName = monthsName[month];\r\n    const dayName = day === 0 ? daysName[6] : daysName[day - 1];\r\n\r\n    return ( \r\n        <Container>\r\n            <ContainerText>\r\n                <h1 className=\"Header_font\">{dayName},</h1>\r\n                <h2 className=\"Header_font\">{days} {monthName}</h2>\r\n            </ContainerText>\r\n        </Container>\r\n     );\r\n}\r\n \r\nexport default Header;","import { BiCalendar } from \"react-icons/bi\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Form = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 90%;\r\n    height: 10%;\r\n    z-index: 1;\r\n    border-bottom: 1px black solid;\r\n`\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n`\r\nconst Datapicker = styled.span`\r\n    display: flex;\r\n    position: relative;\r\n    width: 18px;\r\n    height: 19px;\r\n`\r\nconst DatapickerToggle = styled(BiCalendar)`\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    color: var(--color-gray);\r\n`\r\nconst DatapickerInput = styled.input`\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: 0;\r\n    cursor: pointer;\r\n    box-sizing: border-box;\r\n    &::-webkit-calendar-picker-indicator {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    cursor: pointer;\r\n  }\r\n`\r\nconst AddButton = styled(FiEdit)`\r\n cursor: pointer;\r\n`\r\n\r\nconst AddInput = styled.input`\r\nwidth: 100%;\r\n    align-self: stretch;\r\n`\r\n\r\n\r\nconst AddTask = ({ handleSubmit, handlePriority, date, minDate, handleDate, value, handleChange }) => {\r\n    return ( \r\n        <Form onSubmit={handleSubmit} >\r\n            <Container>\r\n                <div>\r\n                    <input type=\"checkbox\" \r\n                        id='priority' \r\n                        name='priority' \r\n                        onChange={handlePriority}\r\n                    />\r\n                    <label htmlFor=\"priority\">Priorytet</label>\r\n                </div>\r\n                <Datapicker>\r\n                    <DatapickerToggle/>\r\n                    <DatapickerInput \r\n                        type=\"date\" \r\n                        value={date} \r\n                        min={minDate} \r\n                        onChange={handleDate}\r\n                    />\r\n                </Datapicker>\r\n            </Container>\r\n            <Container>\r\n                <AddInput  \r\n                    type=\"text\" \r\n                    value={value} \r\n                    onChange={handleChange}  \r\n                    placeholder='Dodaj zadanie...'\r\n                />\r\n                <button type=\"submit\"><AddButton /></button>\r\n            </Container>\r\n        </Form>\r\n     );\r\n}\r\n \r\nexport default AddTask;","import { BiBlock } from \"react-icons/bi\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    width: 80%;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n`\r\n\r\n\r\nconst SelectSort = ({ value, handleSelect, showMessage }) => {\r\n    return ( \r\n        <Container>\r\n            <label htmlFor=\"sort\">Sortuj według:</label>\r\n            <select \r\n                name=\"sort\" \r\n                id=\"sort\" \r\n                value={value} \r\n                onChange={handleSelect} \r\n                >\r\n                <option value=\"abc\">Alfabetu</option>\r\n                <option value=\"dataUp\">Daty rosnąco</option>\r\n                <option value=\"dataDown\">Daty malejąco</option>\r\n            </select>\r\n            <button \r\n                onClick={showMessage}>\r\n                <BiBlock />\r\n            </button>\r\n        </Container>\r\n     );\r\n}\r\n \r\nexport default SelectSort;","import styled from \"styled-components\";\r\n\r\nconst Container = styled.label`\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    position: relative;\r\n`\r\nconst Input = ({ id, done, handleDone }) => {\r\n    return ( \r\n        <Container htmlFor=\"checkbox\">\r\n            <input \r\n                type=\"checkbox\" \r\n                onChange={() => handleDone(id)} \r\n                checked={done}\r\n            />\r\n        </Container>\r\n       \r\n     );\r\n}\r\n \r\nexport default Input;","import { BiTrash, BiBell } from \"react-icons/bi\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport Input from './Input';\r\n\r\nconst List = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center; \r\n    flex-wrap: nowrap;\r\n    border-bottom: 1px black solid;\r\n    width: 100%;\r\n    &:last-child {\r\n      margin-bottom: 50px;\r\n    }\r\n`\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    color: gray;\r\n`\r\nconst Paragraph = styled.p`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    padding: 0 .3rem;\r\n    overflow: hidden;\r\n    font-size: 0.8rem;\r\n    font-weight: ${props => props.priority ? 'bold' : '300'};\r\n    text-decoration: ${props => props.done ? 'line-through' : 'auto'};\r\n    &.dateIsOver {\r\n      color: rgba(236, 19, 19, .8);\r\n    }\r\n    &.done {\r\n      color: rgba(128, 128, 128, 0.5);\r\n    }\r\n`\r\nconst animationBell = keyframes`\r\n  0% {\r\n    filter: drop-shadow(0px 0px 7px rgb(236 19 19 / 1));\r\n  }\r\n  \r\n  50% {\r\n    color: rgb(230, 202, 202);\r\n    filter: drop-shadow(0px 0px 1px rgb(236 19 19 / 0.6));\r\n  }\r\n\r\n  100% {\r\n    filter: drop-shadow(0px 0px 7px rgb(236 19 19 / 1));  \r\n  }\r\n`\r\n\r\nconst OnBell = styled(BiBell)`\r\n  min-width: 8%;\r\n  min-height: 8%;\r\n  margin: 0 5px;\r\n  color: rgb(240, 240, 240);\r\n  animation: ${animationBell} 2s infinite;\r\n`\r\n\r\nconst OffBell = styled(BiBell)`\r\n  display: none;\r\n`\r\n\r\nconst ParagraphDate = styled.p`\r\n  font-size: 0.7rem;\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  min-width: 60px;\r\n`\r\n\r\nconst daysBetweenDates = (currentTime, finishedTime) => {\r\n  currentTime = new Date(currentTime);\r\n  finishedTime = new Date(finishedTime);\r\n\r\n  const difference = finishedTime - currentTime;\r\n\r\n  return difference / (1000 * 60 * 60 * 24);\r\n}\r\n\r\nconst timeIsOver = (currentTime, finishedTime, maxDifference) => {\r\n  const difference = daysBetweenDates(currentTime, finishedTime);\r\n  return difference <= maxDifference;\r\n}\r\n\r\n\r\nconst Task = ({ handleDone, handleRemove, tasks, minDate }) => {\r\n  return (\r\n      tasks.map(task => <List key={task.id}>\r\n        <Container>\r\n          <Input \r\n            id={task.id} \r\n            done={task.done} \r\n            handleDone={handleDone}\r\n          />\r\n          <Paragraph \r\n            className={ task.done ? 'done' : minDate > task.date ? 'dateIsOver' : ''}\r\n            done={task.done} \r\n            minDate={minDate} \r\n            date={task.date} \r\n            priority={task.priority}\r\n          >\r\n            {task.name}{ timeIsOver(Date.now(), task.date, 3) ? <OnBell/> : <OffBell/> }\r\n          </Paragraph>\r\n        </Container>\r\n        <Container>\r\n          <ParagraphDate>\r\n            {task.date}\r\n          </ParagraphDate>\r\n          <button \r\n            type=\"button\" \r\n            onClick={() => handleRemove(task.id)}\r\n            className='Task_button'\r\n            >\r\n            <BiTrash />\r\n          </button>\r\n        </Container>\r\n      </List>)\r\n    )\r\n  }\r\n \r\nexport default Task;","import Task from './Task/Task'\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 70vw;\r\n  flex: 1;\r\n  overflow: hidden;\r\n`\r\nconst Span = styled.span`\r\n  margin: auto 0;\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  line-height: 100%;\r\n  color: var(--color-gray);\r\n`\r\n\r\n\r\nconst TaskList = ({ tasks, handleDone, handleRemove, minDate }) => {\r\n  return (\r\n    <Container tasks={tasks}>\r\n    {tasks.length > 0 ? \r\n      <Task \r\n        tasks={tasks}\r\n        handleDone={handleDone}\r\n        handleRemove={handleRemove} \r\n        minDate={minDate}\r\n      /> : <Span>Brak zadań</Span>}\r\n    </Container>\r\n  )\r\n}  \r\n \r\nexport default TaskList;","import styled from \"styled-components\"\r\n\r\nconst Container = styled.footer`\r\n    position: fixed;\r\n    left: auto;\r\n    bottom: 0;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    background-color: darkgray;\r\n    width: 100%;\r\n    height: 50px;\r\n`\r\n\r\nconst Text = styled.h3`\r\n    font-size: 1rem;\r\n    color: var(--color-gray);\r\n`\r\n\r\nconst countTask = (countTask) => {\r\n    switch (countTask) {\r\n        case 0:\r\n            return `Brak zadań`\r\n        case 1:\r\n            return `Masz ${countTask} zadanie`\r\n        case 2:\r\n        case 3:\r\n        case 4:\r\n            return `Masz ${countTask} zadania`\r\n        default:\r\n            return `Masz ${countTask} zadań`\r\n    }\r\n}\r\n\r\nconst Footer = ({ tasks }) => {\r\n    \r\nconst countNotDoneTasks = tasks.filter(task => !task.done).length;\r\nconst countDoneTasks = tasks.filter(task => task.done).length;\r\nconst infoTask = countTask(countNotDoneTasks);\r\n   \r\n    return ( \r\n        <Container>\r\n            <Text>{ infoTask }</Text>\r\n            <Text>Zadania ukończone: { countDoneTasks }</Text>\r\n        </Container>\r\n     );\r\n}\r\n \r\nexport default Footer;","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: fixed;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    max-width: 70vw;\r\n    padding: .4rem;\r\n    text-align: center;\r\n    background: rgba( 255, 255, 255);\r\n    box-shadow: 0 8px 32px 0 rgba( 31, 38, 135, 0.4 );\r\n    backdrop-filter: blur( 3.0px );\r\n    border-radius: 10px;\r\n    border: 1px solid rgba( 255, 255, 255, 0.18 );\r\n    overflow: hidden;\r\n    z-index: 1;\r\n    `\r\nconst BTN = styled.button`\r\n    &:hover {\r\n        color: var(--color-grayhover);\r\n    }\r\n`\r\n\r\nconst Popup = ({ removeAll, switchOff }) => {\r\n    return ( \r\n        <Container>\r\n            <label htmlFor=\"popup\">Czy na pewno chcesz wszystko usunąć?</label>\r\n            <BTN\r\n                type=\"button\" \r\n                onClick={removeAll}\r\n                >Tak</BTN>\r\n            <BTN \r\n                type=\"button\" \r\n                onClick={switchOff}\r\n                >Nie</BTN>\r\n        </Container>\r\n        \r\n     );\r\n}\r\n \r\nexport default Popup;","import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport styled from 'styled-components';\n\nimport Header from './Header/Header';\nimport AddTask from './AddTask/AddTask'\nimport SelectSort from './SelectSort/SelectSort';\nimport TaskList from './TaskList/TaskList'\nimport Footer from './Footer/Footer';\nimport Popup from './Popup/Popup';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100vw;\n  min-height: calc(100% - 50px);\n  background-color: gainsboro;\n  overflow: hidden;\n  `\nfunction App() {\n  \n  const retrievedObject = JSON.parse(localStorage.getItem(\"obj\")) || [];\n  const minDate = new Date().toISOString().slice(0, 10);\n  \n\n  const [value, setValue] = useState('');\n  const [priority, setPriority] = useState(false);\n  const [tasks, setTasks] = useState(retrievedObject);\n  const [date, setDate] = useState(minDate);\n  const [select, setSelect] = useState('abc');\n  const [message, setMessage] = useState(false);\n\n  const handleChange = (e) => {\n    setValue(e.target.value)\n  }\n  \n  const handleDate = (e) => {\n    setDate(e.target.value)\n  }\n  const handlePriority = () => {\n    setPriority(!priority)\n  }\n\n  const handleSubmit = (e) => {\n      e.preventDefault();\n      if(value){\n        setTasks(preventTask => ([...preventTask, {\n            id: uuidv4(),\n            name: value,\n            date: date,\n            done: false,\n            priority: priority,\n          }]));\n        setValue('');\n      }\n    }  \n\n  const handleRemove = (id) => {\n    const newTasks = tasks.filter(task => task.id !== id);\n\n    setTasks(newTasks);\n  }\n\n  const handleDone = (id) => {\n      setTasks(\n        tasks.map(task => {\n          if(task.id === id){\n            return {\n              ...task,\n              done: !task.done\n            }\n          }\n          return task;\n        })\n      )\n  }\n\n  const handleSelect = (e) => {\n    setSelect(e.target.value)\n  }\n\n  useEffect(() => {\n    if(select === \"abc\"){      \n      const newTasks = tasks.sort((a, b) => {\n        return a.name.localeCompare(b.name)\n      })\n      setTasks([...newTasks]);\n\n  } if(select === \"dataUp\"){\n      const newTasks = tasks.sort((a,b) => {\n        return new Date(a.date) - new Date(b.date)\n      });\n      setTasks([...newTasks])\n\n  } else if (select === \"dataDown\") {\n      const newTasks = tasks.sort((a,b) => {\n        return new Date(b.date) - new Date(a.date)\n      });\n      setTasks([...newTasks])\n  }\n  }, [select])\n\n  const showMessage = () => {\n    setMessage(!message);\n  }\n  \n  const removeAll = () => {\n    setTasks([]);\n    setMessage(false);\n  }\n\n  const switchOff = () => {\n    setMessage(false);\n  }\n\n  localStorage.setItem(\"obj\", JSON.stringify(tasks));  \n  \n  return (\n    <Container>\n      <Header />\n      <AddTask \n        value={value} \n        date={date}\n        minDate={minDate}\n        handleDate={handleDate}\n        handleSubmit={handleSubmit} \n        handleChange={handleChange} \n        handlePriority={handlePriority}\n      />\n      {message === true ? <Popup switchOff={switchOff} removeAll={removeAll} /> : null}\n      <SelectSort \n        value={select}\n        handleSelect={handleSelect}\n        showMessage={showMessage}\n      />\n      <TaskList\n        tasks={tasks}\n        handleDone={handleDone}\n        handleRemove={handleRemove} \n        minDate={minDate}\n      />\n      <Footer \n      tasks={tasks}\n       />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}